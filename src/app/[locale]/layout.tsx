"use client";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { ReactNode } from "react";
import { AppProps } from "next/app";
import { notFound } from "next/navigation";
import { Providers } from "../../redux/provider";
import { NextIntlClientProvider } from "next-intl";
import { createIntl } from "react-intl";
import messagesEng from "../../../messages/eng.json";
import messagesVie from "../../../messages/vie.json";
import messagesKor from "../../../messages/kor.json";
import Header from "../components/Header/page";

const messages = {
  eng: messagesEng,
  vie: messagesVie,
  kor: messagesKor,
};

const inter = Inter({ subsets: ["latin"] });

const locales = ["eng", "jap", "kor", "vie"];

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

interface RootLayoutProps extends AppProps {
  children: ReactNode;
  params: ParamProps;
}

interface ParamProps {
  locale: string;
}

const intl = createIntl({
  locale: "vie",
  timeZone: "Asia/Ho_Chi_Minh",
});

const RootLayout: React.FunctionComponent<RootLayoutProps> = ({
  children,
  params: { locale },
}) => {
  if (!locales.includes(locale as any)) notFound();

  return (
    <html lang={locale}>
      <body className={inter?.className}>
        <Providers>
          <NextIntlClientProvider
            locale={locale}
            timeZone={intl.timeZone}
            messages={messages[locale]}
          >
            <div className="bg-[url('../../../public/skyNight.png')] w-full h-full">
              <Header />
              {children}
            </div>
            <ToastContainer />
          </NextIntlClientProvider>
        </Providers>
      </body>
    </html>
  );
};

export default RootLayout;
