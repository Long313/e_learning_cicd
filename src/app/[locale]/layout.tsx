"use client";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { ReduxProvider } from "../../redux/provider";
import { ReactNode } from "react";
import { AppProps } from "next/app";
import { notFound } from "next/navigation";
import { Provider } from "react-redux";
import { store } from "../../redux/store";
import { NextIntlClientProvider } from 'next-intl';
import { createIntl } from 'react-intl';
import messagesEn from '../../../messages/en.json';
import messagesVi from '../../../messages/vi.json';

const messages = {
  en: messagesEn,
  vi: messagesVi,
};

const inter = Inter({ subsets: ["latin"] });

const locales = ["en", "ja", "ko", "vi"];

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

interface RootLayoutProps extends AppProps {
  children: ReactNode;
  params: ParamProps;
}

interface ParamProps {
  locale: string;
}

const intl = createIntl({
  locale: 'en',
  timeZone: 'Asia/Ho_Chi_Minh',
});

const RootLayout: React.FunctionComponent<RootLayoutProps> = ({
  children,
  params: { locale },
}) => {
  if (!locales.includes(locale as any)) notFound();

  return (
    <html lang={locale}>
      <body className={inter?.className}>
        <NextIntlClientProvider
          locale={locale}
          timeZone={intl.timeZone}
          messages={messages[locale]}
        >
          <Provider store={store}>
            <div className="bg-[url('../../../public/skyNight.png')] w-full h-full">
              {children}
            </div>
            <ToastContainer />
          </Provider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
};

export default RootLayout;
