import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { ReduxProvider } from "@/redux/provider";
import { ReactNode } from "react";
import { AppProps } from "next/app";
import { notFound } from "next/navigation";

const inter = Inter({ subsets: ["latin"] });

const locales = ["en", "de"];

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps extends AppProps {
  children: ReactNode;
  params: ParamProps;
}

interface ParamProps {
  locale: string;
}

const RootLayout: React.FunctionComponent<RootLayoutProps> = ({
  children,
  params: { locale },
}) => {
  if (!locales.includes(locale as any)) notFound();

  return (
    <html lang={locale}>
      <body className={inter?.className}>
        <ReduxProvider>
          <div className="bg-[url('../../../public/skyNight.png')] w-full h-full">
            {children}
          </div>
          <ToastContainer />
        </ReduxProvider>
      </body>
    </html>
  );
};

export default RootLayout;
